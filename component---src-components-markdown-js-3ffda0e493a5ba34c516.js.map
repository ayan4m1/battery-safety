{"version":3,"file":"component---src-components-markdown-js-3ffda0e493a5ba34c516.js","mappings":"0NAOe,SAASA,EAAS,GAAW,IAAX,KAAEC,GAAM,EACvC,MACEC,aAAa,MAAEC,EAAK,KAAEC,EAAI,QAAEC,GAAS,KACrCC,GACEL,EAAKM,eAET,OACE,UAAC,IAAM,YACL,SAAC,IAAG,CAACJ,MAAOA,KACZ,SAAC,IAAS,WACR,UAAC,IAAG,YACF,SAAC,IAAG,CAACK,GAAG,IAAG,UACT,wBAAKL,OAEP,UAAC,IAAG,CAACK,GAAG,IAAIC,UAAU,sBAAqB,WACzC,yBAAG,gBAAcL,MACjB,yBAAG,cAAYC,SAEjB,SAAC,IAAG,CAACK,GAAG,KAAKC,wBAAyB,CAAEC,OAAQN,YAK1D,C,4ECcA,MAAMO,EAAmB,cAEzB,CAACC,EAAOC,KACN,OAAO,UACLN,KACGO,IAEHC,GAAIC,EAAY,MAAK,SACrBC,EAAQ,MACRC,IAjDG,UAAgB,GACrBH,EAAE,SACFE,EAAQ,UACRV,KACGK,IAEHK,GAAW,QAAmBA,EAAU,OACxC,MAAME,GAAc,UACdC,GAAgB,UAChBF,EAAQ,GACRG,EAAU,GAqBhB,OApBAF,EAAYG,SAAQC,IAClB,MAAMC,EAAYZ,EAAMW,GAExB,IAAIE,EACAC,EACAC,SAHGf,EAAMW,GAIY,iBAAdC,GAAuC,MAAbA,IAEjCC,OACAC,SACAC,SACEH,GAEJC,EAAOD,EAET,MAAMI,EAAQL,IAAaH,EAAgB,IAAIG,IAAa,GACxDE,GAAMP,EAAMW,MAAc,IAATJ,EAAgB,GAAGR,IAAWW,IAAU,GAAGX,IAAWW,KAASH,KACvE,MAATE,GAAeN,EAAQQ,KAAK,QAAQD,KAASD,KACnC,MAAVD,GAAgBL,EAAQQ,KAAK,SAASD,KAASF,IAAS,IAEvD,CAAC,IACHd,EACHL,UAAW,IAAWA,KAAcW,KAAUG,IAC7C,CACDN,KACAE,WACAC,SAEJ,CAWOY,CAAOlB,GACZ,OAAoB,SAAKI,EAAW,IAC/BF,EACHD,IAAKA,EACLN,UAAW,IAAWA,GAAYW,EAAMa,QAAUd,IAClD,IAEJN,EAAIqB,YAAc,MAClB,K,4EC1DA,MAAMC,EAAmB,cAAiB,EACxChB,WACAV,YAEAQ,GAAIC,EAAY,SACbJ,GACFC,KACD,MAAMqB,GAAoB,QAAmBjB,EAAU,OACjDE,GAAc,UACdC,GAAgB,UAChBe,EAAa,GAAGD,SAChBb,EAAU,GAehB,OAdAF,EAAYG,SAAQC,IAClB,MAAMC,EAAYZ,EAAMW,GAExB,IAAIa,SADGxB,EAAMW,GAEI,MAAbC,GAA0C,iBAAdA,IAE5BY,QACEZ,GAEJY,EAAOZ,EAET,MAAMI,EAAQL,IAAaH,EAAgB,IAAIG,IAAa,GAChD,MAARa,GAAcf,EAAQQ,KAAK,GAAGM,IAAaP,KAASQ,IAAO,KAE7C,SAAKpB,EAAW,CAClCH,IAAKA,KACFD,EACHL,UAAW,IAAWA,EAAW2B,KAAsBb,IACvD,IAEJY,EAAID,YAAc,MAClB,K","sources":["webpack://lipo-safety/./src/components/Markdown.js","webpack://lipo-safety/./node_modules/react-bootstrap/esm/Col.js","webpack://lipo-safety/./node_modules/react-bootstrap/esm/Row.js"],"sourcesContent":["import { graphql } from 'gatsby';\nimport PropTypes from 'prop-types';\nimport { Container, Row, Col } from 'react-bootstrap';\n\nimport SEO from '~components/SEO';\nimport Layout from '~components/Layout';\n\nexport default function Markdown({ data }) {\n  const {\n    frontmatter: { title, date, updated },\n    html\n  } = data.markdownRemark;\n\n  return (\n    <Layout>\n      <SEO title={title} />\n      <Container>\n        <Row>\n          <Col xs=\"8\">\n            <h2>{title}</h2>\n          </Col>\n          <Col xs=\"4\" className=\"text-muted text-end\">\n            <p>Published on {date}</p>\n            <p>Updated on {updated}</p>\n          </Col>\n          <Col md=\"12\" dangerouslySetInnerHTML={{ __html: html }} />\n        </Row>\n      </Container>\n    </Layout>\n  );\n}\n\nMarkdown.propTypes = {\n  data: PropTypes.object\n};\n\nexport const query = graphql`\n  query ($pagePath: String!) {\n    markdownRemark(frontmatter: { path: { eq: $pagePath } }) {\n      html\n      frontmatter {\n        date(formatString: \"MMMM DD, YYYY\")\n        updated(formatString: \"MMMM DD, YYYY\")\n        path\n        title\n      }\n    }\n  }\n`;\n","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix, useBootstrapBreakpoints, useBootstrapMinBreakpoint } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function useCol({\n  as,\n  bsPrefix,\n  className,\n  ...props\n}) {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'col');\n  const breakpoints = useBootstrapBreakpoints();\n  const minBreakpoint = useBootstrapMinBreakpoint();\n  const spans = [];\n  const classes = [];\n  breakpoints.forEach(brkPoint => {\n    const propValue = props[brkPoint];\n    delete props[brkPoint];\n    let span;\n    let offset;\n    let order;\n    if (typeof propValue === 'object' && propValue != null) {\n      ({\n        span,\n        offset,\n        order\n      } = propValue);\n    } else {\n      span = propValue;\n    }\n    const infix = brkPoint !== minBreakpoint ? `-${brkPoint}` : '';\n    if (span) spans.push(span === true ? `${bsPrefix}${infix}` : `${bsPrefix}${infix}-${span}`);\n    if (order != null) classes.push(`order${infix}-${order}`);\n    if (offset != null) classes.push(`offset${infix}-${offset}`);\n  });\n  return [{\n    ...props,\n    className: classNames(className, ...spans, ...classes)\n  }, {\n    as,\n    bsPrefix,\n    spans\n  }];\n}\nconst Col = /*#__PURE__*/React.forwardRef(\n// Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n(props, ref) => {\n  const [{\n    className,\n    ...colProps\n  }, {\n    as: Component = 'div',\n    bsPrefix,\n    spans\n  }] = useCol(props);\n  return /*#__PURE__*/_jsx(Component, {\n    ...colProps,\n    ref: ref,\n    className: classNames(className, !spans.length && bsPrefix)\n  });\n});\nCol.displayName = 'Col';\nexport default Col;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix, useBootstrapBreakpoints, useBootstrapMinBreakpoint } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Row = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'row');\n  const breakpoints = useBootstrapBreakpoints();\n  const minBreakpoint = useBootstrapMinBreakpoint();\n  const sizePrefix = `${decoratedBsPrefix}-cols`;\n  const classes = [];\n  breakpoints.forEach(brkPoint => {\n    const propValue = props[brkPoint];\n    delete props[brkPoint];\n    let cols;\n    if (propValue != null && typeof propValue === 'object') {\n      ({\n        cols\n      } = propValue);\n    } else {\n      cols = propValue;\n    }\n    const infix = brkPoint !== minBreakpoint ? `-${brkPoint}` : '';\n    if (cols != null) classes.push(`${sizePrefix}${infix}-${cols}`);\n  });\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, decoratedBsPrefix, ...classes)\n  });\n});\nRow.displayName = 'Row';\nexport default Row;"],"names":["Markdown","data","frontmatter","title","date","updated","html","markdownRemark","xs","className","md","dangerouslySetInnerHTML","__html","Col","props","ref","colProps","as","Component","bsPrefix","spans","breakpoints","minBreakpoint","classes","forEach","brkPoint","propValue","span","offset","order","infix","push","useCol","length","displayName","Row","decoratedBsPrefix","sizePrefix","cols"],"sourceRoot":""}